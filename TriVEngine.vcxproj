<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5FADE440-D6B5-491D-815B-FAA10B67B339}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>TriVEngine</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Libraries\glm-0.9.8.5\glm;Libraries\glfw-3.2.1.bin.WIN32\include;Libraries\vulkan-1.0.68.0\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>Libraries\glfw-3.2.1.bin.WIN32\lib-vc2017;Libraries\vulkan-1.0.68.0\Lib32;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ShowProgress>NotSet</ShowProgress>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>
      </Message>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>echo Compiling Shaders to SPIR-V...
:: if not exist "$(OutDir)Shaders\" mkdir "$(OutDir)Shaders\"
if not exist "Shaders\" mkdir "Shaders\"
for /r %%f in (*.vert, *.frag) do (
    :: cd "$(OutDir)Shaders\"
    cd "Shaders\"
    "$(SolutionDir)Libraries\vulkan-1.0.68.0\Bin32\glslangValidator.exe" -t -V "%%f"
)</Command>
      <Message>Compiling Shaders to SPIR-V...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Libraries\glm-0.9.8.5\glm;Libraries\glfw-3.2.1.bin.WIN64\include;Libraries\vulkan-1.0.68.0\Include;Libraries\physx-3.4.1-x64\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>Libraries\glfw-3.2.1.bin.WIN64\lib-vc2017\Debug;Libraries\vulkan-1.0.68.0\Lib\Debug;Libraries\physx-3.4.1-x64\lib-vc2017\Debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX3DEBUG_x64.lib;PhysX3CommonDEBUG_x64.lib;PxFoundationDEBUG_x64.lib;PhysX3ExtensionsDEBUG.lib;PxPvdSDKDEBUG_x64.lib;nvToolsExt64_1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ShowProgress>NotSet</ShowProgress>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>
      </Message>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>echo Copying Nvidia PhysX DEBUG Dlls to Target Dir...
robocopy "$(SolutionDir)Libraries\physx-3.4.1-x64\lib-vc2017\Debug" "$(TargetDir)\" *.dll /COPY:DAT /DCOPY:T /E
if %errorlevel% leq 3 GOTO glfw else exit %errorlevel%

:glfw
echo Copying GLFW DEBUG Dlls to Target Dir...
robocopy "$(SolutionDir)Libraries\glfw-3.2.1.bin.WIN64\lib-vc2017\Debug" "$(TargetDir)\" *.dll /COPY:DAT /DCOPY:T /E
if %errorlevel% leq 3 GOTO spirv else exit %errorlevel%

:spirv
echo Compiling Shaders to SPIR-V...
:: if not exist "$(OutDir)Shaders\" mkdir "$(OutDir)Shaders\"
if not exist "Shaders\" mkdir "Shaders\"
for /r %%f in (*.vert, *.frag) do (
    :: cd "$(OutDir)Shaders\"
    cd "Shaders\"
    "$(SolutionDir)Libraries\vulkan-1.0.68.0\Bin\glslangValidator.exe" -t -V "%%f"
)</Command>
      <Message>Copy Debug DLLs and Compile SPIR-V Shaders.</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Libraries\glm-0.9.8.5\glm;Libraries\glfw-3.2.1.bin.WIN32\include;Libraries\vulkan-1.0.68.0\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>Libraries\glfw-3.2.1.bin.WIN32\lib-vc2017;Libraries\vulkan-1.0.68.0\Lib32;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>
      </Message>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>echo Compiling Shaders to SPIR-V...
:: if not exist "$(OutDir)Shaders\" mkdir "$(OutDir)Shaders\"
if not exist "Shaders\" mkdir "Shaders\"
for /r %%f in (*.vert, *.frag) do (
    :: cd "$(OutDir)Shaders\"
    cd "Shaders\"
    "$(SolutionDir)Libraries\vulkan-1.0.68.0\Bin32\glslangValidator.exe" -t -V "%%f"
)</Command>
      <Message>Compiling Shaders to SPIR-V...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Libraries\glm-0.9.8.5\glm;Libraries\glfw-3.2.1.bin.WIN64\include;Libraries\vulkan-1.0.68.0\Include;Libraries\physx-3.4.1-x64\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>Libraries\glfw-3.2.1.bin.WIN64\lib-vc2017\Release;Libraries\vulkan-1.0.68.0\Lib\Release;Libraries\physx-3.4.1-x64\lib-vc2017\Release;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX3_x64.lib;PhysX3Common_x64.lib;PxFoundation_x64.lib;PhysX3Extensions.lib;PxPvdSDK_x64.lib;nvToolsExt64_1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>
      </Message>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>echo Copying Nvidia PhysX RELEASE Dlls to Target Dir...
robocopy "$(SolutionDir)Libraries\physx-3.4.1-x64\lib-vc2017\Release" "$(TargetDir)\" *.dll /COPY:DAT /DCOPY:T /E
if %errorlevel% leq 3 GOTO glfw else exit %errorlevel%

:glfw
echo Copying GLFW RELEASE Dlls to Target Dir...
robocopy "$(SolutionDir)Libraries\glfw-3.2.1.bin.WIN64\lib-vc2017\Release" "$(TargetDir)\" *.dll /COPY:DAT /DCOPY:T /E
if %errorlevel% leq 3 GOTO spirv else exit %errorlevel%

:spirv
echo Compiling Shaders to SPIR-V...
:: if not exist "$(OutDir)Shaders\" mkdir "$(OutDir)Shaders\"
if not exist "Shaders\" mkdir "Shaders\"
for /r %%f in (*.vert, *.frag) do (
    :: cd "$(OutDir)Shaders\"
    cd "Shaders\"
    "$(SolutionDir)Libraries\vulkan-1.0.68.0\Bin\glslangValidator.exe" -t -V "%%f"
)</Command>
      <Message>Copy Release DLLs and Compile SPIR-V Shaders.</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Source\Engine\Core\EngineClock.cpp" />
    <ClCompile Include="Source\Engine\Core\TriVActor.cpp" />
    <ClCompile Include="Source\Engine\Core\TriVEngine.cpp" />
    <ClCompile Include="Source\Engine\Core\TriVObject.cpp" />
    <ClCompile Include="Source\Engine\Core\TriVWorld.cpp" />
    <ClCompile Include="Source\Engine\Events\EventManager.cpp" />
    <ClCompile Include="Source\Engine\Messaging\MessageBus.cpp" />
    <ClCompile Include="Source\Engine\Physics\PhysicsEngine.cpp" />
    <ClCompile Include="Source\Engine\Physics\PhysXErrorCallback.cpp" />
    <ClCompile Include="Source\Engine\Start\Main.cpp" />
    <ClCompile Include="Source\Engine\TriVRenderer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Source\Engine\Core\EngineClock.hpp" />
    <ClInclude Include="Source\Engine\Core\ITickable.hpp" />
    <ClInclude Include="Source\Engine\Core\TriVActor.hpp" />
    <ClInclude Include="Source\Engine\Core\TriVEngine.hpp" />
    <ClInclude Include="Source\Engine\Core\TriVObject.hpp" />
    <ClInclude Include="Source\Engine\Core\TriVWorld.hpp" />
    <ClInclude Include="Source\Engine\Events\BaseEngineEvent.hpp" />
    <ClInclude Include="Source\Engine\Events\EngineEvent.hpp" />
    <ClInclude Include="Source\Engine\Events\EngineEventParams.hpp" />
    <ClInclude Include="Source\Engine\Events\EventExecutionType.hpp" />
    <ClInclude Include="Source\Engine\Events\EventManager.hpp" />
    <ClInclude Include="Source\Engine\Global\EngineGlobals.hpp" />
    <ClInclude Include="Source\Engine\Messaging\Message.hpp" />
    <ClInclude Include="Source\Engine\Messaging\MessageBus.hpp" />
    <ClInclude Include="Source\Engine\Physics\IPhysicsTickable.hpp" />
    <ClInclude Include="Source\Engine\Physics\PhysicsEngine.hpp" />
    <ClInclude Include="Source\Engine\Physics\PhysXDefaultAllocator.hpp" />
    <ClInclude Include="Source\Engine\Physics\PhysXErrorCallback.hpp" />
    <ClInclude Include="Source\Engine\Rendering\IRenderable.hpp" />
    <ClInclude Include="Source\Engine\TriVRenderer.hpp" />
    <ClInclude Include="Source\Engine\VDeleter.hpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".gitattributes" />
    <None Include=".gitignore" />
    <None Include="README.md" />
    <None Include="Shaders\default.frag" />
    <None Include="Shaders\default.vert" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>